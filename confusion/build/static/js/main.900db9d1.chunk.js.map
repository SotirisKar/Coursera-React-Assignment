{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/MenuComponent.js","components/DishDetailComponent.js","components/ContactComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/AboutComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errMess","in","transformProps","exitTransform","Card","CardImg","src","image","alt","name","CardBody","CardTitle","designation","CardSubtitle","CardText","description","Home","props","console","log","dish","dishesLoading","dishesErrMess","promotion","promosLoading","promosErrMess","leader","leadersLoading","leadersFailed","RenderMenuItem","onClick","to","id","width","CardImgOverlay","Menu","menu","dishes","map","key","Breadcrumb","BreadcrumbItem","active","RenderDish","RenderComments","comments","postComment","dishId","comment","i","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","required","val","length","CommentForm","state","isModalOpen","toggleModal","bind","handlepostComment","this","setState","values","parseInt","rating","max","min","Button","outline","Modal","isOpen","toggle","ModalHeader","onSubmit","ModalBody","Row","Col","sm","Label","htmlFor","select","type","model","defaultValue","value","text","placeholder","validators","minLength","maxLength","col","show","messages","textarea","rows","ModalFooter","color","Component","DishDetail","len","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","postFeedback","resetFeedbackForm","href","role","md","size","offset","check","checkbox","Header","isNavOpen","toggleNav","handleLogin","event","alert","username","password","remember","checked","preventDefault","Fragment","Navbar","dark","expand","NavbarToggler","NavbarBrand","height","Collapse","navbar","Nav","NavItem","Jumbotron","Form","FormGroup","Input","innerRef","input","Footer","About","RenderLeader","Media","left","body","heading","leaders","CardHeader","title","list","duration","commentsFailed","payload","addComments","dishesFailed","addDishes","promosFailed","errmess","addPromos","promos","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","TransitionGroup","CSSTransition","location","classNames","timeout","path","component","filter","featured","promotions","error","exact","match","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","JSON","stringify","headers","credentials","then","response","ok","Error","status","statusText","message","json","addComment","catch","actions","reset","feedback","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","firstname","lastname","telnum","email","agree","contactType","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.900db9d1.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n\treturn (\r\n\t\t<div className=\"col-12\">\r\n\t\t\t<span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n\t\t\t<p>Loading . . . </p>\r\n\t\t</div>\r\n\t\t);\r\n};","export const baseUrl = 'httpL//localhost:3001/';","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderCard({ item, isLoading, errMess }) {\r\n\tif (isLoading) {\r\n\t\treturn (\r\n\t\t\t<Loading />\r\n\t\t)\r\n\t}\r\n\telse if (errMess) {\r\n\t\treturn (\r\n\t\t\t<h4>{errMess}</h4>\r\n\t\t)\r\n\t}\r\n\telse\r\n\t\treturn (\r\n\t\t\t<FadeTransform in\r\n\t\t\t\ttransformProps={{\r\n\t\t\t\t\texitTransform: 'scale(0.5) translateY(-50%)'\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Card>\r\n\t\t\t\t\t<CardImg src={baseUrl + item.image} alt={item.name} />\r\n\t\t\t\t\t<CardBody>\r\n\t\t\t\t\t\t<CardTitle> {item.name} </CardTitle>\r\n\t\t\t\t\t\t{item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null}\r\n\t\t\t\t\t\t<CardText>{item.description}</CardText>\r\n\t\t\t\t\t</CardBody>\r\n\t\t\t\t</Card>\r\n\t\t\t</FadeTransform>\r\n\t\t)\r\n}\r\n\r\nfunction Home(props) {\r\n\tconsole.log('leader' + props)\r\n\treturn (\r\n\t\t<div className='container'>\r\n\t\t\t<div className='row align-items-start'>\r\n\t\t\t\t<div className='col-12 col-md md-1'>\r\n\t\t\t\t\t<RenderCard item={props.dish}\r\n\t\t\t\t\t\tisLoading={props.dishesLoading}\r\n\t\t\t\t\t\terrMess={props.dishesErrMess}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='col-12 col-md md-1'>\r\n\t\t\t\t\t<RenderCard item={props.promotion}\r\n\t\t\t\t\t\tisLoading={props.promosLoading}\r\n\t\t\t\t\t\terrMess={props.promosErrMess}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='col-12 col-md md-1'>\r\n\t\t\t\t\t<RenderCard item={props.leader}\r\n\t\t\t\t\t\tisLoading={props.leadersLoading}\r\n\t\t\t\t\t\terrMess={props.leadersFailed}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n\r\nfunction RenderMenuItem({ dish, onClick }) {\r\n    return (\r\n        <Card>\r\n            <Link to={`/menu/${dish.id}`}>\r\n            <CardImg width=\"100%\" src={dish.image} alt={dish.name} />\r\n            <CardImgOverlay>\r\n                <CardTitle>{dish.name}</CardTitle>\r\n                </CardImgOverlay>\r\n            </Link>\r\n        </Card>\r\n    );\r\n}\r\n\r\nconst Menu = (props) => {\r\n    const menu = props.dishes.dishes.map((dish) => {\r\n        return (\r\n            <div className=\"col-12 col-md-5 m-1\" key={baseUrl + dish.id}>\r\n                <RenderMenuItem dish={dish}/>\r\n            </div>\r\n        );\r\n    });\r\n    if (props.dishes.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    } else if (props.dishes.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.dishes.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Menu</h3>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {menu}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Menu;","import React, { Component } from 'react';\r\nimport { Control, Errors, LocalForm } from \"react-redux-form\";\r\nimport { Breadcrumb, BreadcrumbItem, Button, Card, CardBody, CardImg, CardText, CardTitle, Col, Label, Modal, ModalBody, ModalFooter, ModalHeader, Row } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nfunction RenderDish({ dish }) {\r\n\tif (dish != null) {\r\n\t\treturn (\r\n\t\t\t<div className='col-12 col-md-5 m-1'>\r\n\t\t\t\t<FadeTransform in\r\n\t\t\t\t\ttransformProps={{\r\n\t\t\t\t\t\texitTransform: 'scale(0.5) translateY(-50%)'\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t<CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n\t\t\t\t\t\t<CardBody>\r\n\t\t\t\t\t\t\t<CardTitle>{dish.name}</CardTitle>\r\n\t\t\t\t\t\t\t<CardText>{dish.description}</CardText>\r\n\t\t\t\t\t\t</CardBody>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</FadeTransform>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n\r\nfunction RenderComments({ comments, postComment, dishId }) {\r\n\tif (comments != null) {\r\n\t\treturn (\r\n\t\t\t<div className='col-12 col-md-5 m-1'>\r\n\t\t\t\t<Stagger in>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcomments.map((comment, i) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<Fade in>\r\n\t\t\t\t\t\t\t\t\t<ul className='list-unstyled' key={comment.id}>\r\n\t\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t\t<div>{comment.comment}</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div>{`-- ${comment.author} , ${new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit' }).format(new Date(Date.parse(comment.date)))}`}</div>\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t</Fade>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t</Stagger>\r\n\t\t\t\t<CommentForm dishId={dishId} postComment={postComment} />\r\n\t\t\t</div>\r\n\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst DishDetail = (props) => {\r\n\tif (props.isLoading) {\r\n\t\treturn (\r\n\t\t\t<div className='container'>\r\n\t\t\t\t<div className='row'>\r\n\t\t\t\t\t<Loading />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\telse if (props.errMess) {\r\n\t\treturn (\r\n\t\t\t<div className='container'>\r\n\t\t\t\t<div className='row'>\r\n\t\t\t\t\t<h4>{props.errMess}</h4>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\telse if (props.dish != null)\r\n\t\treturn (\r\n\t\t\t<div className='container' >\r\n\t\t\t\t<div className='row'>\r\n\t\t\t\t\t<Breadcrumb>\r\n\t\t\t\t\t\t<BreadcrumbItem>\r\n\t\t\t\t\t\t\t<Link to='/home'>Home</Link>\r\n\t\t\t\t\t\t</BreadcrumbItem>\r\n\t\t\t\t\t\t<BreadcrumbItem>\r\n\t\t\t\t\t\t\t<Link to='/menu'>Menu</Link>\r\n\t\t\t\t\t\t</BreadcrumbItem>\r\n\t\t\t\t\t\t<BreadcrumbItem active>\r\n\t\t\t\t\t\t\t{props.dish.name}\r\n\t\t\t\t\t\t</BreadcrumbItem>\r\n\t\t\t\t\t</Breadcrumb>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='container'>\r\n\t\t\t\t\t<div className='row'>\r\n\t\t\t\t\t\t<RenderDish dish={props.dish} />\r\n\t\t\t\t\t\t<RenderComments\r\n\t\t\t\t\t\t\tcomments={props.comments}\r\n\t\t\t\t\t\t\tpostComment={props.postComment}\r\n\t\t\t\t\t\t\tdishId={props.dish.id}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n}\r\n\r\n\r\nconst minLength = (min) => (val) => val && val.length >= min\r\nconst maxLength = (max) => (val) => !val || val.length < max\r\nconst required = (val) => val && val.length\r\n\r\nclass CommentForm extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tisModalOpen: false\r\n\t\t}\r\n\t\tthis.toggleModal = this.toggleModal.bind(this)\r\n\t\tthis.handlepostComment = this.handlepostComment.bind(this)\r\n\t}\r\n\r\n\ttoggleModal() {\r\n\t\tthis.setState({\r\n\t\t\tisModalOpen: !this.state.isModalOpen\r\n\t\t})\r\n\t}\r\n\r\n\thandlepostComment(values) {\r\n\t\tthis.toggleModal()\r\n\t\tthis.props.postComment(parseInt(this.props.dishId), values.rating, values.name, values.comment)\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Button outline onClick={this.toggleModal}><span className='fa fa-pencil fa-lg'></span> Add Comment</Button>\r\n\t\t\t\t<Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal} >\r\n\t\t\t\t\t<ModalHeader toggle={this.toggleModal} >Submit Comment</ModalHeader>\r\n\t\t\t\t\t<LocalForm className='container' onSubmit={(values) => { this.handlepostComment(values) }}>\r\n\t\t\t\t\t\t<ModalBody>\r\n\t\t\t\t\t\t\t<Row className='form-group'>\r\n\t\t\t\t\t\t\t\t<Col sm={12}><Label htmlFor='rating'>Rating</Label></Col>\r\n\t\t\t\t\t\t\t\t<Col sm={12}>\r\n\t\t\t\t\t\t\t\t\t<Control.select className='form-control' type='number'\r\n\t\t\t\t\t\t\t\t\t\tmodel='.rating' id='rating' name='rating' min='0' max='5' defaultValue={5}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<option value='1'>1</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value='2'>2</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value='3'>3</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value='4'>4</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value='5'>5</option>\r\n\t\t\t\t\t\t\t\t\t</Control.select>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t<Row className='form-group'>\r\n\t\t\t\t\t\t\t\t<Col sm={12}><Label htmlFor='name'>Your Name</Label></Col>\r\n\t\t\t\t\t\t\t\t<Col sm={12}>\r\n\t\t\t\t\t\t\t\t\t<Control.text className='form-control' model='.name'\r\n\t\t\t\t\t\t\t\t\t\tid='name' name='name' placeholder='Your Name'\r\n\t\t\t\t\t\t\t\t\t\tvalidators={{\r\n\t\t\t\t\t\t\t\t\t\t\tminLength: minLength(3),\r\n\t\t\t\t\t\t\t\t\t\t\tmaxLength: maxLength(15)\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col col={12}>\r\n\t\t\t\t\t\t\t\t\t<Errors model='.name' show='touched' className='text-danger'\r\n\t\t\t\t\t\t\t\t\t\tmessages={{\r\n\t\t\t\t\t\t\t\t\t\t\tminLength: 'Must be greater than 2 characters',\r\n\t\t\t\t\t\t\t\t\t\t\tmaxLength: 'Must be less than 15 characters'\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t<Row className='form-group'>\r\n\t\t\t\t\t\t\t\t<Col sm={12}><Label htmlFor='comment'>Comment</Label></Col>\r\n\t\t\t\t\t\t\t\t<Col sm={12}>\r\n\t\t\t\t\t\t\t\t\t<Control.textarea className='form-control' rows='6'\r\n\t\t\t\t\t\t\t\t\t\tmodel='.comment' id='comment' name='comment'\r\n\t\t\t\t\t\t\t\t\t\tvalidators={{\r\n\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t\t<Errors model='.comment' show='touched' className='text-danger'\r\n\t\t\t\t\t\t\t\t\t\tmessages={{\r\n\t\t\t\t\t\t\t\t\t\t\trequired: 'This field is required'\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</ModalBody>\r\n\t\t\t\t\t\t<ModalFooter>\r\n\t\t\t\t\t\t\t<Button color='primary'>Submit</Button>\r\n\t\t\t\t\t\t</ModalFooter>\r\n\t\t\t\t\t</LocalForm>\r\n\t\t\t\t</Modal>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\nexport default DishDetail;","import React, { Component } from 'react';\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap';\nimport { Link } from 'react-router-dom'\nimport { Control, Form, Errors } from 'react-redux-form';\n\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => val && (val.length >= len);\nconst isNumber = (val) => !isNaN(Number(val));\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass Contact extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(values) {\n        console.log('submit clicked')\n        this.props.postFeedback(values)\n        this.props.resetFeedbackForm()\n    }\n\n    render() {\n\n        return (\n            <div className=\"container\">\n                <div className='row'>\n                    <Breadcrumb>\n                        <BreadcrumbItem>\n                            <Link to='/home'>Home</Link>\n                        </BreadcrumbItem>\n                        <BreadcrumbItem active>\n                            Contact Us\n                            </BreadcrumbItem>\n                    </Breadcrumb>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Location Information</h3>\n                    </div>\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\n                        <h5>Our Address</h5>\n                        <address>\n                            121, Clear Water Bay Road<br />\n                            Clear Water Bay, Kowloon<br />\n                            HONG KONG<br />\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                        </address>\n                    </div>\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\n                        <h5>Map of our Location</h5>\n                    </div>\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\n                        <div className=\"btn-group\" role=\"group\">\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\n                        </div>\n                    </div>\n                </div>\n                <div className='row row-content'>\n                    <div className='col-12'>\n                        <h3>Send us Your Feedback</h3>\n                    </div>\n                    <div className='col-12 col-md-9'>\n                        <Form model='feedback' onSubmit={(values) => this.handleSubmit(values)}>\n                            <Row className='form-group'>\n                                <Label htmlFor='firstname' md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Control.text model='.firstname' id='firstname' name='firstname'\n                                        className='form-control'\n                                        placeholder='Michelle'\n                                        validators={{\n                                            required,\n                                            minLength: minLength(3),\n                                            maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors\n                                        className='text-danger'\n                                        model='.firstname'\n                                        show='touched'\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className='form-group'>\n                                <Label htmlFor='lastname' md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model='.lastname' id='lastname' name='lastname'\n                                        className='form-control'\n                                        validators={{\n                                            required,\n                                            minLength: minLength(3),\n                                            maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors\n                                        className='text-danger'\n                                        model='.lastname'\n                                        show='touched'\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className='form-group'>\n                                <Label htmlFor='telnum' md={2}>Contact No. </Label>\n                                <Col md={10}>\n                                    <Control.text model='.telnum' id='telnum' name='telnum'\n                                        className='form-control'\n                                        validators={{\n                                            required,\n                                            minLength: minLength(3),\n                                            maxLength: maxLength(10),\n                                            isNumber\n                                        }} />\n                                    <Errors\n                                        className='text-danger'\n                                        model='.telnum'\n                                        show='touched'\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 numbers',\n                                            maxLength: 'Must be 10 numbers or less',\n                                            isNumber: 'Must be a number'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className='form-group'>\n                                <Label htmlFor='email' md={2}>E-mail</Label>\n                                <Col md={10}>\n                                    <Control.text model='.email' id='email' name='email'\n                                        placeholder='123@gmail.com' className='form-control'\n                                        validators={{\n                                            required,\n                                            validEmail\n                                        }}\n                                    />\n                                    <Errors\n                                        className='text-danger'\n                                        model='.email'\n                                        show='touched'\n                                        messages={{\n                                            required: 'required',\n                                            validEmail: 'Invalid email address'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className='form-group'>\n                                <Col md={{ size: 6, offset: 2 }}>\n                                    <div className='form-check'>\n                                        <Label check>\n                                            <Control.checkbox model='.agree' name='agree'\n                                                className='form-check-input' />\n                                            <strong>May we contact you</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={{ size: 3, offset: 1 }}>\n                                    <Control.select model='.contact' name='contactType'\n                                        className='form-control'  >\n                                        <option>Tel.</option>\n                                        <option>Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className='form-group'>\n                                <Label htmlFor='message' md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model='.message' id='message' name='message'\n                                        rows='12' className='form-control' />\n                                </Col>\n                            </Row>\n                            <Row className='form-group'>\n                                <Col md={{ size: 10, offset: 2 }}>\n                                    <Button className='float-right' type='submit' color='primary'>\n                                        Send Feedback\n                                        </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Contact;","import React, { Component } from 'react';\r\nimport {Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,Button, Modal, ModalHeader, ModalBody,Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nclass Header extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        };\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n    toggleNav() {\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n    handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n            + \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav}/>\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n                            <img src=\"assets/images/logo.png\" height=\"30\" width=\"41\" alt=\"Ristorante Con Fusion\" />\r\n                        </NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>            \r\n                                    <NavLink className=\"nav-link\" to=\"/home\">\r\n                                        <span className=\"fa fa-home fa-lg\"></span> Home\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/aboutus\">\r\n                                        <span className=\"fa fa-info fa-lg\"></span> About Us\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/menu\">\r\n                                        <span className=\"fa fa-menu fa-lg\"></span> Menu\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/contactus\">\r\n                                        <span className=\"fa fa-address-card fa-lg\"></span> Contact Us\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante Con Fusion </h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input} />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                        innerRef={(input) => this.remember = input} />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Footer(props) {\r\n    return (\r\n        <div className=\"footer\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-4 offset-1 col-sm-2\">\r\n                        <h5>Links</h5>\r\n                        <ul className=\"list-unstyled\">\r\n                            <li><Link to='home'>Home</Link></li>\r\n                            <li><Link to='aboutus'>About Us</Link></li>\r\n                            <li><Link to='menu'>Menu</Link></li>\r\n                            <li><Link to='home'>Contact Us</Link></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"col-7 col-sm-5\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n                            <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                                confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 align-self-center\">\r\n                        <div className=\"text-center\">\r\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                            <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-auto\">\r\n                        <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Stagger, Fade } from 'react-animation-components';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nfunction About(props) {\r\n\r\n    const RenderLeader = (props) => {\r\n        const leader = props.leader\r\n        return (\r\n            <Media className='col-12 mb-4'>\r\n                <Media left className='col-2'>\r\n                    <img src={baseUrl + leader.image} />\r\n                </Media>\r\n                <Media body >\r\n                    <Media heading>{leader.name}</Media>\r\n                    <p>{leader.designation}\r\n                    </p>\r\n                    <p>\r\n                        {leader.description}\r\n                    </p>\r\n                </Media>\r\n            </Media>\r\n        )\r\n    }\r\n\r\n    const leaders = props.leaders.leaders.map((leader) => {\r\n        return (\r\n            <Fade in>\r\n                <RenderLeader leader={leader} key={leader.id} />\r\n            </Fade>\r\n        );\r\n    });\r\n\r\n    return (\r\n\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Media list className='pl-0 mt-2'>\r\n                        <Stagger in duration={300}>\r\n                            {leaders}\r\n                        </Stagger>\r\n                    </Media>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;    ","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n})\r\n\r\nexport const postComment = (dishId, rating, author, comment) => ((dispatch) => {\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    }\r\n    newComment.date = new Date().toISOString()\r\n\r\n    return fetch(baseUrl + 'comments', {\r\n        method: 'POST',\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n        .then(response => {\r\n            if (response.ok)\r\n                return response\r\n            else {\r\n                var error = new Error('Error' + response.status + ':' + response.statusText)\r\n                error.response = response\r\n                throw error\r\n            }\r\n        }, error => {\r\n            var errMess = new Error(error.message)\r\n            throw error\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => dispatch(addComment(response)))\r\n        .catch(error => {\r\n            console.log('Post comments error', error.message)\r\n            alert('Your comment could not be posted.')\r\n        })\r\n})\r\n\r\nexport const fetchComments = () => (dispatch) => {\r\n    return fetch(baseUrl + 'comments')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errMess = new Error(error.message)\r\n                throw errMess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(comments => dispatch(addComments(comments)))\r\n        .catch(error => dispatch(commentsFailed(error.message)))\r\n};\r\n\r\nexport const commentsFailed = (errMess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errMess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n    dispatch(dishesLoading(true))\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n        .then(response => {\r\n            if (response.ok)\r\n                return response\r\n            else {\r\n                var error = new Error('Error' + response.status + ':' + response.statusText)\r\n                error.response = response\r\n                throw error\r\n            }\r\n        }, error => {\r\n            var errMess = new Error(error.message)\r\n            throw errMess\r\n        })\r\n        .then(response => response.json())\r\n        .then(dishes => dispatch(addDishes(dishes)))\r\n        .catch(error => {\r\n            dispatch(dishesFailed(error.message))\r\n        })\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING,\r\n});\r\n\r\nexport const dishesFailed = (errMess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errMess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n\r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(promos => dispatch(addPromos(promos)))\r\n        .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    dispatch(leadersLoading())\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n        .then(response => {\r\n            if (response.ok)\r\n                return response\r\n            else {\r\n                var error = Error('Error' + response.status + ':' + response.statusText)\r\n                error.response = response\r\n                throw error;\r\n            }\r\n        }, error => {\r\n            var errmess = new Error(error.message)\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(leaders => dispatch(addLeaders(leaders)))\r\n        .catch(error => {\r\n            dispatch(leadersFailed(error.message))\r\n        })\r\n}\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n})\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n})\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n})\r\n\r\nexport const postFeedback = (feedback) => () => {\r\n    feedback.date = new Date().toISOString()\r\n\r\n    return fetch(baseUrl + 'feedback', {\r\n        body: JSON.stringify(feedback),\r\n        credentials: 'same-origin',\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        },\r\n        method: 'POST',\r\n    }).then(response => {\r\n        if (response.ok)\r\n            return response\r\n        else {\r\n            var error = new Error('Error' + response.status + ':' + response.statusText)\r\n            error.response = response\r\n            throw error\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n        .then(feedback => alert('Your feedback is submitted \\n' + JSON.stringify(feedback)))\r\n        .catch(error => alert('Your feedback could not be sent'))\r\n}","export const DISHES_LOADING = 'DISHES_LOADING'\r\nexport const DISHES_FAILED = 'DISHES_FAILED'\r\nexport const ADD_DISHES = 'ADD_DISHES'\r\n\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS'\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED'\r\nexport const ADD_COMMENT = 'ADD_COMMENT'\r\n\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING'\r\nexport const ADD_PROMOS = 'ADD_PROMOS'\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED'\r\n\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING'\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED'\r\nexport const ADD_LEADERS = 'ADD_LEADERS'","import React, { Component } from 'react';\r\nimport Home from './HomeComponent';\r\nimport Menu from './MenuComponent';\r\nimport DishDetail from './DishDetailComponent';\r\nimport Contact from './ContactComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport About from './AboutComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom'; \r\nimport { connect } from 'react-redux';\r\nimport { postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders, postFeedback } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dishes: state.dishes,\r\n        comments: state.comments,\r\n        promotions: state.promotions,\r\n        leaders: state.leaders\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n    fetchDishes: () => { (fetchDishes())(dispatch) },\r\n    resetFeedbackForm: () => { dispatch(actions.reset('feedback')) },\r\n    fetchComments: () => { dispatch(fetchComments()) },\r\n    fetchPromos: () => { dispatch(fetchPromos()) },\r\n    fetchLeaders: () => { dispatch(fetchLeaders()) },\r\n    postFeedback: (feedback) => { dispatch(postFeedback(feedback)) }\r\n})\r\n\r\nclass Main extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchDishes()\r\n        this.props.fetchComments()\r\n        this.props.fetchPromos()\r\n        this.props.fetchLeaders()\r\n    }\r\n\r\n    render() {\r\n        const HomePage = () => {\r\n            return (\r\n                <Home\r\n                    dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n                    dishesLoading={this.props.dishes.isLoading}\r\n                    dishesErrMess={this.props.dishes.errMess}\r\n                    promotion={this.props.promotions.promotions.filter((promotion) => promotion.featured)[0]}\r\n                    promosLoading={this.props.promotions.isLoading}\r\n                    promosErrMess={this.props.promotions.errMess}\r\n                    leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n                    leadersLoading={this.props.leaders.isLoading}\r\n                    leadersFailed={this.props.leaders.error}\r\n                />\r\n            )\r\n        }\r\n\r\n        const DishWithId = ({ match }) => {\r\n            return (\r\n                <DishDetail\r\n                    dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId))[0]}\r\n                    isLoading={this.props.dishes.isLoading}\r\n                    errMess={this.props.dishes.errMess}\r\n                    comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId))}\r\n                    commentsErrMess={this.props.comments.errMess}\r\n                    postComment={this.props.postComment}\r\n                />\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <TransitionGroup>\r\n                    <CSSTransition key={this.props.location.key} classNames='page' timeout={300}>\r\n                        <Switch>\r\n                            <Route path=\"/home\" component={HomePage} />\r\n                            <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes} />} />\r\n                            <Route path=\"/menu/:dishId\" component={DishWithId} />\r\n                            <Route exact path=\"/contactus\" component={() => <Contact postFeedback={this.props.postFeedback} resetFeedbackForm={this.props.resetFeedbackForm} />} />\r\n                            <Route exact path=\"/aboutus\" component={() => <About leaders={this.props.leaders} />} />\r\n                            <Redirect to='/home' />\r\n                        </Switch>\r\n                    </CSSTransition>\r\n                </TransitionGroup>\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = {\r\n        isLoading: true,\r\n        errMess: null,\r\n        dishes: []\r\n    }, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return { ...state, isLoading: false, errMess: null, dishes: action.payload }\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []}\r\n        case ActionTypes.DISHES_FAILED:\r\n            return { ...state, isLoading: false, errMess: action.payload, dishes: [] }\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = { errMess: null, comments: [] }, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return { ...state, errMess: null, comments: action.payload };\r\n\r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return { ...state, errMess: action.payload };\r\n\r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload;\r\n            comment.date = new Date().toISOString();\r\n            return { ...state, comments: state.comments.concat(comment) };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    promotions: []\r\n}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n            return { ...state, isLoading: false, errMess: null, promotions: action.payload };\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return { ...state, isLoading: true, errMess: null, promotions: [] }\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return { ...state, isLoading: false, errMess: action.payload };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes'\r\n\r\nexport const Leaders = (state = {\r\n\tleaders: [],\r\n\terror: null,\r\n\tisLoading: true\r\n}, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase ActionTypes.LEADERS_LOADING:\r\n\t\t\treturn { ...state, leaders: [], isLoading: true, error: null }\r\n\r\n\t\tcase ActionTypes.ADD_LEADERS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tleaders: action.payload,\r\n\t\t\t\tisLoading: false,\r\n\t\t\t\terror: null\r\n\t\t\t}\r\n\r\n\t\tcase ActionTypes.LEADERS_FAILED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tleaders: [],\r\n\t\t\t\tisLoading: false,\r\n\t\t\t\terror: action.payload\r\n\t\t\t}\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n}","import React, { Component } from 'react';\r\nimport Main from './components/MainComponent';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { ConfigureStore } from './redux/configureStore';\r\nimport './App.css';\r\n\r\nconst store = ConfigureStore();\r\n\r\nclass App extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Provider store={store}>\r\n                <BrowserRouter>\r\n                    <div>\r\n                        <Main/>\r\n                    </div>\r\n                </BrowserRouter>\r\n            </Provider>\r\n        );\r\n    }\r\n}\r\nexport default App;","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { createForms } from 'react-redux-form';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { InitialFeedback } from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}